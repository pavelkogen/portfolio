###########################################################
#                FILE GENERATED BY ANSIBLE                #
#          ANY MANUAL CHANGES WILL BE DESTROYED           #
###########################################################

$FileOwner syslog
$FileGroup root
$FileCreateMode 0644
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup root

$ModLoad imuxsock

$ModLoad imklog

module(load="imudp"  SchedulingPolicy="fifo" batchSize="64" threads="4" timeRequery="8" ) # needs to be done just once
input(type="imudp" port="514" Address="{{ inner_address }}" )

module(load="impstats" interval="600" severity="7" log.file="/syslog/syslog/stats.log")

$EscapeControlCharactersOnReceive off
$MainMsgQueueWorkerThreads 8

$template CustomFormat,"[%fromhost% %timegenerated% (%programname% %syslogfacility-text%)]%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
$template CustomFormat1,"[%fromhost% %timegenerated%]%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"
$template SimpleFormat,"%msg:::sp-if-no-1st-sp%%msg:::drop-last-lf%\n"

main_queue( queue.DequeueBatchSize="10000" queue.size="1000000" queue.workerthreads="4")

############ nginx ############
template(name="nginx_static_bookimages_access_log" type="string" string="/syslog/fe.collect.logs/static-bookimages.access.log")
:syslogtag, isequal, "static-bookimages.access.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx_static_bookimages_access_log") stop }

template(name="nginx17_static_bookimages_access_log" type="string" string="/syslog/fe.collect.logs/static-bookimages.access.log")
:syslogtag, isequal, "staticbookimagesaccesslog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_static_bookimages_access_log") stop }

template(name="nginx_hub_access_log" type="string" string="/syslog/fe.collect.logs/hub.access.log")
:syslogtag, isequal, "hub.access.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx_hub_access_log") stop }

template(name="nginx17_hub_access_log" type="string" string="/syslog/fe.collect.logs/hub.access.log")
:syslogtag, isequal, "hubaccesslog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_hub_access_log") stop }

template(name="nginx_error_log" type="string" string="/syslog/fe.collect.logs/nginx.error.log")
:syslogtag, isequal, "nginx.error.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx_error_log") stop }

template(name="nginx17_error_log" type="string" string="/syslog/fe.collect.logs/nginx.error.log")
:syslogtag, isequal, "nginxerrorlog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_error_log") stop }

template(name="nginx_hub_access_beeline_log" type="string" string="/syslog/fe.collect.logs/hub.access.beeline.log")
:syslogtag, isequal, "hub.access.beeline.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx_hub_access_beeline_log") stop }

template(name="nginx17_hub_access_beeline_log" type="string" string="/syslog/fe.collect.logs/hub.access.beeline.log")
:syslogtag, isequal, "hubaccessbeelinelog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_hub_access_beeline_log") stop }

template(name="nginx17_ya_access_log" type="string" string="/syslog/fe.collect.logs/ya.access.log")
:syslogtag, isequal, "yaaccesslog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_ya_access_log") stop }

template(name="nginx17_test_access_log" type="string" string="/syslog/fe.collect.logs/test.access.log")
:syslogtag, isequal, "testaccesslog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_test_access_log") stop }

template(name="nginx17_test2_access_log" type="string" string="/syslog/fe.collect.logs/test2.access.log")
:syslogtag, isequal, "test2accesslog:" { action(type="omfile" template="CustomFormat1"       DynaFile="nginx17_test2_access_log") stop }

############ apache ############
template(name="httpd_hub_access_log" type="string" string="/syslog/be.collect.logs/hub.access.log")
:syslogtag, isequal, "httpd.hub.access.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="httpd_hub_access_log") stop }

template(name="httpd_error_log" type="string" string="/syslog/be.collect.logs/hub.error.log")
:syslogtag, isequal, "httpd.hub.error.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="httpd_error_log") stop }

############  auth, cron, mail ############
template(name="mail_log" type="string" string="/syslog/%fromhost%/mail.log")
:programname, isequal, "postfix" { action(type="omfile" template="CustomFormat1"       DynaFile="mail_log") stop }

template(name="dkim_log" type="string" string="/syslog/%fromhost%/dkim.log")
:programname, isequal, "opendkim" { action(type="omfile" template="CustomFormat1"       DynaFile="dkim_log") stop }

template(name="cron_log" type="string" string="/syslog/%fromhost%/cron.log")
:syslogfacility-text, isequal, "cron" { action(type="omfile" template="CustomFormat1"       DynaFile="cron_log") stop }

template(name="auth_log" type="string" string="/syslog/%fromhost%/auth.log")
:syslogfacility-text, isequal, "auth" { action(type="omfile" template="RSYSLOG_TraditionalFileFormat"       DynaFile="auth_log" ) stop }

############ mysqld ############
template(name="mysqld_log" type="string" string="/syslog/%fromhost%/mysqld.log")
:syslogtag, isequal, "mysql.error.log:" { action(type="omfile" template="CustomFormat1"       DynaFile="mysqld_log") stop }

############ rift, elliptics ############
template(name="rift_log" type="string" string="/syslog/%fromhost%/rift.log")
:programname, isequal, "rift" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_log") stop }

template(name="rift_filestorage_pdf_log" type="string" string="/syslog/%fromhost%/rift_filestorage_pdf.log")
:programname, isequal, "rift.filestorage.pdf" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_filestorage_pdf_log") stop }

template(name="rift_filestorage_mp3_log" type="string" string="/syslog/%fromhost%/rift_filestorage_mp3.log")
:programname, isequal, "rift.filestorage.mp3" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_filestorage_mp3_log") stop }

template(name="rift_filestorage_fb2_log" type="string" string="/syslog/%fromhost%/rift_filestorage_fb2.log")
:programname, isequal, "rift.filestorage.fb2" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_filestorage_fb2_log") stop }

template(name="rift_filestorage_pub_log" type="string" string="/syslog/%fromhost%/rift_filestorage_pub.log")
:programname, isequal, "rift.filestorage.pub" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_filestorage_pub_log") stop }

template(name="rift_filestorage_ios_log" type="string" string="/syslog/%fromhost%/rift_filestorage_ios.log")
:programname, isequal, "rift.filestorage.ios" { action(type="omfile" template="CustomFormat1"       DynaFile="rift_filestorage_ios_log") stop }

template(name="riftclient_log" type="string" string="/syslog/%fromhost%/riftclient.log")
:programname, isequal, "riftclient" { action(type="omfile" template="CustomFormat1" DynaFile="riftclient_log") stop }

############ elliptics ############
template(name="elliptics_log" type="string" string="/syslog/%fromhost%/elliptics.log")
:programname, isequal, "elliptics" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_log") stop }

template(name="elliptics_filestorage_pdf_log" type="string" string="/syslog/%fromhost%/elliptics_filestorage_pdf.log")
:programname, isequal, "elliptics_filestorage_pdf" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_filestorage_pdf_log") stop }

template(name="elliptics_filestorage_mp3_log" type="string" string="/syslog/%fromhost%/elliptics_filestorage_mp3.log")
:programname, isequal, "elliptics_filestorage_mp3" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_filestorage_mp3_log") stop }

template(name="elliptics_filestorage_fb2_log" type="string" string="/syslog/%fromhost%/elliptics_filestorage_fb2.log")
:programname, isequal, "elliptics_filestorage_fb2" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_filestorage_fb2_log") stop }

template(name="elliptics_filestorage_pub_log" type="string" string="/syslog/%fromhost%/elliptics_filestorage_pub.log")
:programname, isequal, "elliptics_filestorage_pub" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_filestorage_pub_log") stop }

template(name="elliptics_filestorage_ios_log" type="string" string="/syslog/%fromhost%/elliptics_filestorage_ios.log")
:programname, isequal, "elliptics_filestorage_ios" { action(type="omfile" template="CustomFormat1"       DynaFile="elliptics_filestorage_ios_log") stop }

############ payments ############
template(name="pay_log" type="string" string="/syslog/payments.collect.logs/payments.log")

############ sef_urls ############
template(name="sef_urls_log" type="string" string="/syslog/sefurls.collect.logs/sef_urls.log")

############ DDOS ############
template(name="ddos_log" type="string" string="/syslog/ddos/ddos.log")

############ SMS ############
template(name="SendSMSMessages" type="string" string="/syslog/sendmessagelog/message.log")

if $programname == 'XPortal' then {
        if $syslogfacility-text == 'local2' then {
                action(type="omfile" template="CustomFormat1"       DynaFile="SendSMSMessages")
                stop
        }
        if $syslogfacility-text == 'local5' then {
                action(type="omfile" template="CustomFormat1"       DynaFile="ddos_log")
                stop
        }
        if $syslogfacility-text == 'local6' and $syslogpriority-text == 'notice' then {
                action(type="omfile" template="CustomFormat1"        DynaFile="sef_urls_log")
                stop
        }
        if $syslogfacility-text == 'local6' then {
                action(type="omfile" template="CustomFormat1"       DynaFile="pay_log")
                stop
        }
        if $syslogfacility-text == 'local7' then {
                action(type="omfile" template="CustomFormat1"       DynaFile="riftclient_log")
                stop
        }
}

$template TicketFilePath,"/syslog/ticketdebug/%msg:R,ERE,1,DFLT:\| \[([0-9]+)\]--end%.log"
local4.* ?TicketFilePath;CustomFormat1

local3.* /syslog/cron/cron.log;CustomFormat1

############ other ############
$template OTHER_LOGS,"/syslog/%fromhost%/syslog.log"
*.* ?OTHER_LOGS;CustomFormat1
